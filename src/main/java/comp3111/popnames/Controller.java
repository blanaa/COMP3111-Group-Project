/**
 * Building on the sample skeleton for 'ui.fxml' Controller Class generated by SceneBuilder 
 */
package comp3111.popnames;

import java.util.Vector;

import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.Tab;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.RadioButton;

public class Controller {

    @FXML
    private Tab tabTaskZero;

    @FXML
    private TextField textfieldNameF;

    @FXML
    private TextField textfieldYear;

    @FXML
    private Button buttonRankM;

    @FXML
    private TextField textfieldNameM;

    @FXML
    private Button buttonRankF;

    @FXML
    private Button buttonTopM;

    @FXML
    private Button buttonTopF;

    @FXML
    private Button buttonSummary;
    
    @FXML
    private Tab tabReport1;

    @FXML
    private ToggleGroup T1;

    @FXML
    private Tab tabReport2;

    @FXML
    private ToggleGroup T11;

    @FXML
    private Tab tabReport3;

    @FXML
    private ToggleGroup T111;

    @FXML
    private Tab tabApp1;

    @FXML
    private Tab tabApp2;

    @FXML
    private Tab tabApp3;

    @FXML
    private TextArea textAreaConsole;
    

    
    
    // Task 3
    
    @FXML
    private TextArea task3_textSummary;
    
    @FXML
    private RadioButton task3_buttonMale;
    
    @FXML 
    private RadioButton task3_buttonFemale;
    
    @FXML
    private ToggleGroup T5;
    
    @FXML
    private TextField task3_textYear1;
    
    @FXML
    private TextField task3_textYear2;
    
    @FXML
    private Button task3_buttonReport;
    
    
    
    // Task 6
    
    @FXML
    private TextField task6_textMyName;
    
    @FXML
    private RadioButton task6_buttonMale1;
    
    @FXML
    private RadioButton task6_buttonFemale1;
    
    @FXML
    private ToggleGroup T2;
    
    @FXML
    private TextField task6_textBirthYear;
    
    @FXML
    private TextField task6_textMateName;
    
    @FXML
    private RadioButton task6_buttonMale2;
    
    @FXML
    private RadioButton task6_buttonFemale2;
    
    @FXML
    private ToggleGroup T3;
    
    @FXML
    private RadioButton task6_buttonYounger;
    
    @FXML
    private RadioButton task6_buttonOlder;
    
    @FXML
    private ToggleGroup T4;
    
    @FXML
    private Button task6_buttonScore;
    
    
    /**
     *  Task Zero
     *  To be triggered by the "Summary" button on the Task Zero Tab 
     *  
     */
    @FXML
    void doSummary() {
    	int year = Integer.parseInt(textfieldYear.getText());
    	String oReport = AnalyzeNames.getSummary(year);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rank (female)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRankF() {
    	String oReport = "";
    	String iNameF = textfieldNameF.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameF, "F");
    	if (oRank == -1)
    		oReport = String.format("The name %s (female) has not been ranked in the year %d.\n", iNameF, iYear);
    	else
    		oReport = String.format("Rank of %s (female) in year %d is #%d.\n", iNameF, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }

  
    /**
     *  Task Zero
     *  To be triggered by the "Rank (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doRankM() {
    	String oReport = "";
    	String iNameM = textfieldNameM.getText();
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	int oRank = AnalyzeNames.getRank(iYear, iNameM, "M");
    	if (oRank == -1)
    		oReport = String.format("The name %s (male) has not been ranked in the year %d.\n", iNameM, iYear);
    	else
    		oReport = String.format("Rank of %s (male) in year %d is #%d.\n", iNameM, iYear, oRank);
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (female)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopF() {
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (female) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "F"));
    	textAreaConsole.setText(oReport);
    }


    /**
     *  Task Zero
     *  To be triggered by the "Top 5 (male)" button on the Task Zero Tab
     *  
     */
    @FXML
    void doTopM() {
    	System.out.println("kk");
    	String oReport = "";
    	final int topN = 5;
    	int iYear = Integer.parseInt(textfieldYear.getText());
    	oReport = String.format("Top %d most popular names (male) in the year %d:\n", topN, iYear);
    	for (int i=1; i<=topN; i++)
    		oReport += String.format("#%d: %s\n", i, AnalyzeNames.getName(iYear, i, "M"));
    	textAreaConsole.setText(oReport);
    }
    
    
    /**
     *  Task 3
     *  To be triggered by the "Report" button on the Reporting 3 Tab
     *  
     */
    @FXML
    void task3_getReport() {
    	String report = "", brief = "";
    	
    	int year1=Integer.parseInt(task3_textYear1.getText());
    	int year2=Integer.parseInt(task3_textYear2.getText());
    	String gender="";
    	if(task3_buttonMale.isSelected()){
    		gender="M";
    	}
    	else{
    		gender="F";
    	}
    	Vector<String> nameList = NameTrend.getNameList(year1, year2, gender);
    	if (nameList.size() == 1) {
    		textAreaConsole.setText(nameList.get(0));
    		return;
    	}
    	int[][] allRanks = NameTrend.getAllRanks(year1, year2, gender, nameList);
    	int[][] allDiff = NameTrend.getDifference(year1, year2, gender, allRanks);
    	String name_rise = NameTrend.getRiseName(nameList, allDiff);
    	String name_fall = NameTrend.getFallName(nameList, allDiff);
    	int rise[] = NameTrend.getRise(year1, allRanks, allDiff);
    	int fall[] = NameTrend.getFall(year1, allRanks, allDiff);
    	
    	brief = String.format("%s is found to have shown the largest rise in popularity from rank %d in year %d to rank %d in year %d. "
    			+ "On the other hand, %s is found to have shown the largest fall in popularity from rank %d in year %d to rank %d "
    			+ "in year %d.", name_rise, rise[0], rise[1], rise[2], rise[3], name_fall, fall[0], fall[1], fall[2], fall[3]);
    	
    	report += "Name             Lowest Rank [in year]             Highest Rank [in year]             Trend";
    	report += "\n";
    	
    	report += String.format("%s          %d  [ %d ]          %d  [ %d ]          %d ranks up", name_rise, rise[0], rise[1], rise[2], rise[3], rise[4]);
    	report += "\n";
    	
    	report += String.format("%s          %d  [ %d ]          %d  [ %d ]          %d ranks down", name_fall, fall[2], fall[3], fall[4], fall[0], fall[1]);
    	
    	task3_textSummary.setText(brief);
    	textAreaConsole.setText(report);
    }
    
    @FXML
    void task6_getScore() {
    	String report = "";
    	
    	String iName = task6_textMyName.getText();
    	String iGender = "";
    	if(task6_buttonMale1.isSelected()){
    		iGender = "M";
    	}
    	else {
    		iGender = "F";
    	}
    	int iYOB = Integer.parseInt(task6_textBirthYear.getText());
    	String iNameMate = task6_textMateName.getText();
    	String iGenderMate = "";
    	if(task6_buttonMale2.isSelected()){
    		iGenderMate = "M";
    	}
    	else {
    		iGenderMate = "F";
    	}
    	String iPreference = "";
    	if(task6_buttonYounger.isSelected()){
    		iPreference = "younger";
    	}
    	else {
    		iPreference = "older";
    	}
    	
    	int oRank = PredictScores.get_oRank(iYOB, iName, iGender);
    	if (oRank == -1) {
    		String gender = "";
    		if (iGender=="M") {
    			gender = "males";
    		}
    		else if (iGender=="F") {
    			gender = "females";
    		}
    		report += String.format("Your name, %s, is not found in the %s born in %d. Please re-enter your informations.", iName, gender, iYOB);
    		textAreaConsole.setText(report);
    		return;
    	}
    	else if (oRank == -2) {
    		report += String.format("Wrong input! Please make sure year of birth is in range 1880 to 2019!");
    		textAreaConsole.setText(report);
    		return;
    	}
    	int oYOB = PredictScores.get_oYOB(iYOB, iPreference);
    	if (oYOB < 1880 || oYOB > 2019) {
    		report += String.format("Sorry, we do not have the data of people born in %d. Please re-enter your preference or year of birth.", oYOB);
    		textAreaConsole.setText(report);
    		return;
    	}
    	int oRankMate = PredictScores.get_oRankMate(oYOB, iNameMate, iGenderMate);
    	if (oRankMate == -1) {
    		String gender2 = "";
    		if (iGenderMate=="M") {
    			gender2 = "male";
    		}
    		else if (iGenderMate=="F") {
    			gender2 = "female";
    		}
    		report += String.format("There is no %s with name %s that suits your preference of %s mates. Please re-enter your mate's informations.", gender2, iNameMate, iPreference);
    		textAreaConsole.setText(report);
    		return;
    	}
    	double oScore = PredictScores.get_oScore(oRank, oRankMate);
    	
    	report += String.format("The compatibility of you, %s, and your mate, %s, is %.2f%%.", iName, iNameMate, oScore);
    	
    	textAreaConsole.setText(report);
    }
    
}

